// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PersonalBudget.Data.DataAccessLayer;
using System;

namespace PersonalBudget.Data.Migrations
{
    [DbContext(typeof(PersonalBudgetDbContext))]
    [Migration("20171209012628_AddBudgetPeriodAndBudgetTarget")]
    partial class AddBudgetPeriodAndBudgetTarget
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonalBudget.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("PersonalBudget.Models.BudgetPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("PeriodEndDate");

                    b.Property<DateTime>("PeriodStartDate");

                    b.HasKey("Id");

                    b.ToTable("BudgetPeriod");
                });

            modelBuilder.Entity("PersonalBudget.Models.BudgetTarget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BudgetPeriodId");

                    b.Property<Guid>("CategoryId");

                    b.Property<decimal>("Target");

                    b.HasKey("Id");

                    b.HasIndex("BudgetPeriodId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BudgetTarget");
                });

            modelBuilder.Entity("PersonalBudget.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("MasterCategoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MasterCategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PersonalBudget.Models.MasterCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("MasterCategory");
                });

            modelBuilder.Entity("PersonalBudget.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<Guid>("CategoryId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<decimal>("Inflow");

                    b.Property<decimal>("Outflow");

                    b.Property<string>("Payee");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("PersonalBudget.Models.BudgetTarget", b =>
                {
                    b.HasOne("PersonalBudget.Models.BudgetPeriod", "BudgetPeriod")
                        .WithMany("BudgetTargets")
                        .HasForeignKey("BudgetPeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonalBudget.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonalBudget.Models.Category", b =>
                {
                    b.HasOne("PersonalBudget.Models.MasterCategory", "MasterCategory")
                        .WithMany("Categories")
                        .HasForeignKey("MasterCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PersonalBudget.Models.Transaction", b =>
                {
                    b.HasOne("PersonalBudget.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonalBudget.Models.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
